name: Update Vendors from Sheet

on:
  schedule:
    - cron: '0 3 * * *' # daily 03:00 UTC
  workflow_dispatch:

jobs:
  update-vendors:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch published CSV (Vendors)
        env:
          SHEET_CSV_URL: ${{ secrets.SHEET_CSV_URL }}
        run: |
          set -e
          mkdir -p data
          echo "Fetching CSV from $SHEET_CSV_URL"
          curl -s "$SHEET_CSV_URL" -o data/vendors.csv
          python3 -c "
import csv, json
rows = []
with open('data/vendors.csv', newline='', encoding='utf-8') as f:
    reader = csv.DictReader(f)
    for r in reader:
        rows.append(r)
with open('data/vendors.json','w',encoding='utf-8') as fh:
    json.dump(rows, fh, ensure_ascii=False, indent=2)
"

      - name: Generate changes.json (compare with previous)
        run: |
          python3 -c "
import json, os, shutil

def load(p):
    return json.load(open(p, encoding='utf-8')) if os.path.exists(p) else []

new = load('data/vendors.json')
old = load('data/vendors_prev.json')

changes = {'added': [], 'removed': [], 'updated': []}

old_map = {o.get('Vendor'): o for o in old}
new_map = {n.get('Vendor'): n for n in new}

for v in new_map:
    if v not in old_map:
        changes['added'].append(new_map[v])
    elif new_map[v] != old_map[v]:
        changes['updated'].append(new_map[v])

for v in old_map:
    if v not in new_map:
        changes['removed'].append(old_map[v])

with open('data/changes.json','w',encoding='utf-8') as fh:
    json.dump(changes, fh, ensure_ascii=False, indent=2)

shutil.copy('data/vendors.json', 'data/vendors_prev.json')
"

      - name: Commit and Push
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add data/
          git commit -m "Auto-update vendors.json and changes.json" || echo "No changes"
          git push
